#Projeto Site Simples

Este Ã© um projeto simples com backend em **Spring Boot** e frontend em **HTML, CSS e JavaScript**.

## ðŸ“Œ Requisitos
Antes de iniciar, certifique-se de ter instalado:
- [Java 17+](https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html)
- [Maven](https://maven.apache.org/)
- [Docker](https://www.docker.com/)

## ðŸš€ Como Rodar o Projeto

### **Passo 1: Gerar o Build do Projeto**

Abra o terminal na raiz do projeto e execute:
```sh
mvn clean package -DskipTests
```
Isso irÃ¡ gerar o arquivo **.jar** necessÃ¡rio para rodar o backend.

### **Passo 2: Subir os ContÃªineres Docker**

Agora, suba o ambiente Docker com:
```sh
docker compose up -d --force-recreate
```
Isso iniciarÃ¡ os serviÃ§os definidos no `docker-compose.yml`.

### **Passo 3: Acessar o Sistema**

ApÃ³s iniciar os contÃªineres, acesse o sistema no navegador:
```
http://localhost:8080/
```

## ðŸ“œ Endpoints da API
Caso queira testar a API via Postman ou outra ferramenta, utilize os endpoints abaixo:

- **Criar usuÃ¡rio** (POST)
  ```sh
  POST http://localhost:8080/api/user
  Content-Type: application/json
  {
    "name": "Miguel",
    "address": "Rua X, 123",
    "email": "miguel@email.com",
    "phone": "99999-9999"
  }
  ```

- **Listar usuÃ¡rios** (GET)
  ```sh
  GET http://localhost:8080/api/user
  ```

## ðŸ›  Tecnologias Utilizadas
- **Backend:** Java 17, Spring Boot 3.3.2
- **Banco de Dados:** PostgreSQL
- **Frontend:** HTML, CSS e JavaScript
- **ContainerizaÃ§Ã£o:** Docker e Docker Compose

---

Agora o seu projeto estÃ¡ pronto para ser utilizado! ðŸš€

